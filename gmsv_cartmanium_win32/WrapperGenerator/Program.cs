using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
namespace WrapperGenerator {
	class Program {
		static string Destarify(string S) {
			string R = S;
			while (R.StartsWith("*"))
				R = R.Substring(1, R.Length - 1);
			return R;
		}

		static string[] GetArgumentNames(string[] Parts) {
			List<string> ArgNames = new List<string>();
			for (int i = 0; i < Parts.Length; i++) {
				if (Parts[i].EndsWith(","))
					ArgNames.Add(Destarify(Parts[i].Substring(0, Parts[i].Length - 1)));
				else if ((Parts[i].EndsWith(")") || Parts[i].EndsWith(");")) && !Parts[i].StartsWith("(") && !Parts[i].StartsWith("*("))
					if (Parts[i].EndsWith(")"))
						ArgNames.Add(Destarify(Parts[i].Substring(0, Parts[i].Length - 1)));
					else if (Parts[i].EndsWith(";"))
						ArgNames.Add(Destarify(Parts[i].Substring(0, Parts[i].Length - 2)));
			}
			return ArgNames.ToArray();
		}

		static string GetFunctionName(string[] Parts) {
			for (int i = 0; i < Parts.Length; i++)
				if ((Parts[i].StartsWith("(") || Parts[i].StartsWith("*(")) && Parts[i].EndsWith(")")) {
					if (Parts[i].StartsWith("("))
						return Parts[i].Substring(1, Parts[i].Length - 2);
					else if (Parts[i].StartsWith("*"))
						return Parts[i].Substring(2, Parts[i].Length - 3);
				}
			throw new Exception("Fuck! Exception!");
		}

		static void Main(string[] args) {
			Console.Title = "WrapperGenerator";
			Console.WriteLine("Reading Functions.txt");
			string[] Funcs = File.ReadAllLines("Functions.txt");

			Console.WriteLine("Generating wrappers");
			List<string> WFuncs = new List<string>();

			foreach (var Func in Funcs) {
				string[] Function = Func.Split(' ');
				switch (Function[0]) {
					case "LUA_API":
					case "LUALIB_API": {
						string[] FuncParts = Func.Split(' ');
						string WrapperFunc = "static" + Func.Substring(Function[0].Length, Func.Length - Function[0].Length);
						WrapperFunc = WrapperFunc.Trim().Substring(0, WrapperFunc.Trim().Length - 1) + " {\n";

						//if (FuncParts[1] != "void" || FuncParts[2].StartsWith("*"))
						//	WrapperFunc += "\treturn NULL;\n";
						string Args = "";
						string[] ArgNames = GetArgumentNames(FuncParts);
						for (int i = 0; i < ArgNames.Length; i++)
							Args += ", " + ArgNames[i];
						if (Args.Length > 0)
							Args = Args.Substring(2, Args.Length - 2);

						WrapperFunc += "\treturn " + GetFunctionName(FuncParts) + "(" + Args + ");\n";

						WrapperFunc += "}";
						if (WrapperFunc.Contains("...") || WrapperFunc.Contains("[]"))
							WrapperFunc = "/* TODO\n" + WrapperFunc + "\n*/";
						WFuncs.Add(WrapperFunc);
					}
					break;
					default:
					Console.WriteLine("Unknown {0}, aborting!", Function[0]);
					break;
				}
			}

			Console.WriteLine("Writing to Wrappers.txt");
			if (File.Exists("Wrappers.txt"))
				File.Delete("Wrappers.txt");
			var Wrappers = File.CreateText("Wrappers.txt");
			Wrappers.WriteLine("// This file has been generated by Cartman300's WrapperGenerator\n");
			foreach (var F in WFuncs)
				Wrappers.WriteLine(F + "\n");
			Wrappers.Flush();
			Wrappers.Close();
		}
	}
}